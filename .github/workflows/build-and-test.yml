name: build-and-test

on:
  # Trigger on pushes to branches and version tags
  push:
    branches: [ "*" ]
    tags: [ "v*" ]
  # Only trigger on pull_request events for target branches
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ "*" ]
  # Allow manual trigger
  workflow_dispatch:

concurrency:
  group: '${{ github.workflow }}-${{ github.job }}-${{ github.head_ref || github.ref_name }}'
  cancel-in-progress: true

env:
  BUNDLER_VER: 2.6.1
  RUBYGEMS_VER: 3.6.1

jobs:
  detect-native-gems:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-2022
          - macos-14
          - ubuntu-20.04
          - ubuntu-22.04
        ruby:
          - 3.1.2
          - 3.3
        include:
          - os: windows-2022
            platform: x64-mingw32
          - os: windows-2022
            platform: x64-mingw-ucrt
          - os: macos-14
            platform: x86_64-darwin
          - os: macos-14
            platform: arm64-darwin
          - os: ubuntu-22.04
            platform: x86_64-linux
          - os: ubuntu-22.04
            platform: any
          - os: ubuntu-20.04
            platform: x86_64-linux
          - os: ubuntu-20.04
            platform: any
            
    steps:
      - uses: actions/checkout@v3

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}

      - run: gem update --system $RUBYGEMS_VER

      - name: Install gem dependencies and report native extensions
        env:
          CC: false
          LD: false
          CXX: false
        run: ruby ./support/bundle_install.rb

      - name: Run tests
        env:
          FIG_SVN_EXECUTABLE: 
        run: bundle exec rake rspec

  # since we are packaging a pure ruby gem, we only need to package
  # once for each ruby version, not once on every platform.
  #
  # and maybe we don't even need to package for each ruby version?
  package:
    needs: detect-native-gems
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby:
          - 3.1.2

    steps:
      - uses: actions/checkout@v3

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}

      - run: gem update --system $RUBYGEMS_VER

      - name: Install gem dependencies
        env:
          CC: false
          LD: false
          CXX: false
        run: bundle install

      - name: Build gem
        run: bundle exec rake gem

      - name: Upload gem
        uses: actions/upload-artifact@v4
        with:
          name: fig
          path: pkg/fig-*.gem

  verify-version:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verify version matches tag
        run: |
          # Extract version from version.rb
          EMBEDDED_VERSION=$(grep -o "VERSION = '.*'" lib/fig/version.rb | cut -d"'" -f2)
          # Extract version from git tag (remove 'v' prefix)
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          
          echo "Version in version.rb: $EMBEDDED_VERSION"
          echo "Version from git tag: $TAG_VERSION"
          
          if [ "$EMBEDDED_VERSION" != "$TAG_VERSION" ]; then
            echo "::error::Version mismatch! version.rb ($EMBEDDED_VERSION) does not match git tag ($TAG_VERSION)"
            exit 1
          fi

  publish:
    needs: [package, verify-version]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      contents: write  # needed for creating releases
      packages: write
    environment:
      name: rubygems
      url: https://rubygems.org/gems/fig

    steps:
      - uses: actions/checkout@v4

      - name: Download gem artifact
        uses: actions/download-artifact@v4
        with:
          name: fig
          path: pkg/

      - name: Get gem version
        id: gem-version
        run: |
          GEM_VERSION=$(ls pkg/*.gem | sed 's/.*-\([0-9.]\+\)\.gem/\1/')
          echo "version=${GEM_VERSION}" >> "$GITHUB_OUTPUT"

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: pkg/*.gem
          name: Release v${{ steps.gem-version.outputs.version }}
          draft: false
          prerelease: false
          generate_release_notes: true

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'
          bundler: '2.6.1'
          rubygems: '3.6.1'

      - name: Publish to RubyGems
        env:
          # Using environment secrets for better security
          RUBYGEMS_API_KEY: ${{ secrets.RUBYGEMS_API_KEY }}
        run: |
          mkdir -p $HOME/.gem
          echo -e "---\n:rubygems_api_key: ${RUBYGEMS_API_KEY}" > $HOME/.gem/credentials
          chmod 0600 $HOME/.gem/credentials
          gem push pkg/*.gem
          rm -f $HOME/.gem/credentials

# Need to figure out how to parameterize the common parts of
# these jobs and factor out only the differing parts.
  test-gem-installation-centos:
    if: false
    needs: package
    runs-on: ubuntu-latest
    container:
      image: centos:7.9.2009
    strategy:
      matrix:
        ruby:
          - 3.1.2
          - 3.3
    steps:
      - name: Download gem
        uses: actions/download-artifact@v4
        with:
          name: fig
          path: .

      - name: Install packages required by setup-ruby action
        run: |
          yum install -y libyaml

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}

      - run: |
          gem update --system $RUBYGEMS_VER
          gem install ./fig-*.gem

  test-gem-installation-ubuntu:
    needs: package
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu:20.04
          - ubuntu:22.04
          - ubuntu:24.04
        ruby:
          - 3.1.2
          - 3.3
    steps:
      - name: Install packages required by github actions and ruby itself
        # ensure apt-get doesn't stop to ask questions
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          apt-get update
          apt-get install -y libyaml-0-2 openssl nodejs build-essential

      - name: Download gem
        uses: actions/download-artifact@v4
        with:
          name: fig
          path: .

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}

      - run: |
          gem update --system $RUBYGEMS_VER
          gem install ./fig-*.gem
